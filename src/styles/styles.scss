.animate-icon {
	cursor: pointer;
	&:hover svg {
		stroke: currentColor;
		stroke-width: 2.5px;
		stroke-dasharray: 50px;
		stroke-dashoffset: 50px;
		stroke-linecap: round;
		stroke-linejoin: round;
		animation: animate-logo 1.2s ease forwards;
	}
}

.simplebar-track.simplebar-horizontal .simplebar-scrollbar:before,
.simplebar-track.simplebar-vertical .simplebar-scrollbar:before {
	background: var(--app-container-text-primary);
}

.swipeUpwards {
	animation: swipeUpwards 0.2s var(--easing) forwards;
}

.swipeDownwards {
	animation: swipeDownwards 0.2s var(--easing) forwards;
}

span.emoji {
	font-weight: 100;
}

@keyframes showDropdown {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

.dropdown {
	cursor: pointer;
	position: relative;
	display: inline-block;

	.dropdown-content {
		display: none;
	}

	&:hover .dropdown-content {
		display: block;
		animation: showDropdown 0.1s ease;
	}
}

.warning-enter {
	opacity: 0;
	transform: translateY(-100%);
	transition: all 0.2s var(--easing);
}

.warning-enter-active,
.warning-enter-done,
.warning-exit {
	opacity: 1;
	transform: translateY(0);
}

.warning-exit-active {
	opacity: 0;
	transform: translateY(-100%);
	transition: all 0.2s var(--easing);
}

.warning-exit-done {
	opacity: 0;
	transform: translateY(100%);
	display: none !important;
}

.ErrorModal {
	height: fit-content !important;
	width: 100%;
	display: grid;
	place-items: center;
}

.ReactModal__Body--open {
	overflow: hidden;
	position: fixed;
	width: 100%;
	height: 100%;
}

// React Modal Transition

.ReactModal__Overlay {
	opacity: 0;
	transform: translateY(2rem);
	transition: all 0.15s ease;
}
.ReactModal__Overlay--after-open {
	opacity: 1;
	transform: translateY(0px);
}

.ReactModal__Overlay--before-close {
	opacity: 0;
	transform: translateY(4rem);
}

// React Modal Styling

.ReactModal__Overlay {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 1000;
	background: var(--modal-backdrop);
}

.ReactModal__Content {
	position: absolute;
	-webkit-overflow-scrolling: touch;
	outline: none;
	padding: 20px;
	color: var(--app-text);
	padding: 0;
	inset: none;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
	width: max-content;
	height: 100%;
	max-height: 90vh;
	max-width: 90vw;
	img {
		height: 100%;
		width: 100%;
		object-fit: contain;
	}
}

// Styles for NFT Buttons

:root {
	--btn-share: 205, 100%;
	--btn-heart: 4, 100%;
	--btn-report: 338, 100%;
	--btn-appeal: 40, 100%;
	--btn-color-l: 55%;
	--btn-color-l-dark: 53%;
	--btn-bg-l: 97%;
	--btn-bg-l-dark: 15%;
	--btn-hover-l: 95%;
	--btn-opacity-active: 0.5;
	--btn-opacity: 0.25;
	--btn-text-dimension: 1.75rem;
	--btn-text-dimension-dark: 1.375rem;
	--btn-text-offset: 0.5rem;
	--btn-text-offset-dark: 0.25rem;
	--btn-padding: 0.75rem;
}

@keyframes heart-animation {
	0% {
		transform: scale(1) rotate(0deg);
	}
	25% {
		transform: translateY(-0.25rem) scale(1.25) rotate(-2.5deg);
		filter: drop-shadow(0 0.15rem 0.05rem rgba(0, 0, 0, 0.1));
	}
	50% {
		transform: translateY(0.125rem) scale(0.9) rotate(2.5deg);
	}
	66% {
		transform: scale(1.1) rotate(-2.5deg);
	}
	85% {
		transform: rotate(1.25deg);
	}
	93% {
		transform: rotate(-0.675deg);
	}
	97% {
		transform: rotate(0.33deg);
	}
	100% {
		transform: scale(1) rotate(0deg);
	}
}

@mixin btn($type, $dark: false) {
	@if $dark == true {
		background: hsla(var(--btn-#{$type}), var(--btn-bg-l-dark));
		color: hsla(var(--btn-#{$type}), var(--btn-color-l-dark));
		&:hover {
			background: hsla(
				var(--btn-#{$type}),
				calc(var(--btn-bg-l-dark) + 2.5%)
			);
		}
	} @else {
		background: hsla(var(--btn-#{$type}), var(--btn-bg-l));
		color: hsla(var(--btn-#{$type}), var(--btn-color-l));
		&:hover {
			background: hsla(var(--btn-#{$type}), calc(var(--btn-bg-l) - 2.5%));
		}
		&:active {
			box-shadow: inset
				0
				0
				0
				0.25rem
				hsla(
					var(--btn-#{$type}),
					calc(var(--btn-color-l) + 5%),
					var(--btn-opacity-active)
				);
			outline: 0.375rem
				solid
				hsla(
					var(--btn-#{$type}),
					var(--btn-color-l),
					var(--btn-opacity-active)
				);
		}
	}
	@if $type== heart {
		&[disabled] {
			svg {
				fill: none;
				stroke: hsla(var(--btn-#{$type}), var(--btn-color-l));
				stroke-width: 0.15rem;
			}
		}
		&:not([disabled]) {
			svg {
				animation: heart-animation 1s ease forwards;
			}
		}
	}
}

.btn {
	position: relative;
	text-decoration: none;
	cursor: pointer;
	display: flex;
	align-items: center;
	gap: 0.375rem;
	width: fit-content;
	box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,
		rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;
	padding: var(--btn-padding);
	border-radius: 1000rem;
	user-select: none;
	transition: background 0.15s ease, outline 0.15s ease;
	svg {
		width: calc(var(--btn-text-dimension) - var(--btn-text-offset) / 2);
		height: calc(var(--btn-text-dimension) - var(--btn-text-offset) / 2);
	}
	span {
		line-height: 1;
		padding-right: calc(var(--btn-padding) / 2);
		font-weight: 700;
		font-size: calc(var(--btn-text-dimension) - var(--btn-text-offset));
	}
	&__report {
		@include btn(report);
	}
	&__share {
		@include btn(share);
	}
	&__heart {
		@include btn(heart);
	}
}

.btn--dark {
	position: relative;
	text-decoration: none;
	cursor: pointer;
	display: flex;
	align-items: center;
	gap: 0.375rem;
	width: fit-content;
	box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,
		rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;
	padding: var(--btn-padding);
	border-radius: 1000rem;
	user-select: none;
	transition: background 0.15s ease, outline 0.15s ease;
	svg {
		width: calc(
			var(--btn-text-dimension-dark) - var(--btn-text-offset-dark) / 2
		);
		height: calc(
			var(--btn-text-dimension-dark) - var(--btn-text-offset-dark) / 2
		);
	}
	span {
		line-height: 1;
		padding-right: calc(var(--btn-padding) / 2);
		font-weight: 700;
		font-size: calc(
			var(--btn-text-dimension-dark) - var(--btn-text-offset-dark)
		);
	}
	&__report {
		@include btn(report, $dark: true);
	}
	&__share {
		@include btn(share, $dark: true);
	}
	&__appeal {
		@include btn(appeal, $dark: true);
	}
}

@keyframes animate-logo {
	0% {
		stroke-dashoffset: 0px;
		fill: currentColor;
	}
	15% {
		fill: transparent;
	}
	50% {
		fill: transparent;
	}
	75% {
		stroke-width: 2.5px;
	}
	100% {
		stroke-dashoffset: 110px;
		fill: currentColor;
		stroke-width: 0;
	}
}

@keyframes swipeDownwards {
	0% {
		transform: translateY(0);
		opacity: 1;
	}
	100% {
		transform: translateY(50%);
		opacity: 0;
	}
}

@keyframes swipeUpwards {
	0% {
		transform: translateY(50%);
		opacity: 0;
	}
	100% {
		transform: translateY(0);
		opacity: 1;
	}
}
